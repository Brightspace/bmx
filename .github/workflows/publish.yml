name: publish

on:
  push:
    paths:
      - "src/**"
      - ".github/workflows/publish.yml"
    branches:
      - main
  pull_request:
    paths:
      - "src/**"
      - ".github/workflows/publish.yml"
  repository_dispatch:
    types: [create-release]

jobs:
  create_release:
    if: ${{ github.event_name == 'repository_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.create_release.outputs.release_tag }}
    steps:
      - name: Create release
        id: create_release
        uses: ./.github/actions/create-release

  build:
    if: ${{ always() }}
    needs: create_release
    strategy:
      matrix:
        include:
          - machine: windows-latest
            platform: win
          - machine: macos-latest
            platform: osx
    runs-on: ${{ matrix.machine }}
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: publish
        shell: pwsh
        env:
          PLATFORM: ${{ matrix.platform }}
        working-directory: src/D2L.Bmx
        run: |
          dotnet publish -r $env:PLATFORM-x64 -c Release -o build/$env:PLATFORM
          ls
      - name: upload build
        if: ${{ github.event_name == 'repository_dispatch' }}
        uses: ./.github.actions/upload-build-to-release
        with:
          release_tag: ${{ needs.create_release.outputs.release_tag }}
          asset_pattern: '$env:PLATFORM.*'
          asset_content_type: ${{ matrix.content_type }}

  build_docker:
    if: ${{ always() }}
    needs: create_release
    strategy:
      matrix:
        include:
          - file: Dockerfile.ubuntu
          - file: Dockerfile.alpine
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: publish
        shell: pwsh
        env:
          DOCKERFILE: ${{ matrix.file }}
        run: |
          docker buildx build -f $env:DOCKERFILE -o out .
          ls
      - name: upload build
        if: ${{ github.event_name == 'repository_dispatch' }}
        uses: ./.github.actions/upload-build-to-release
        with:
          release_tag: ${{ needs.create_release.outputs.release_tag }}
          asset_pattern: '$env:PLATFORM.*'
          asset_content_type: ${{ matrix.content_type }}
