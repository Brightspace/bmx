name: publish

on:
  push:
    paths:
      - "src/**"
      - ".github/workflows/publish.yml"
    branches:
      - main
  pull_request:
    paths:
      - "src/**"
      - ".github/workflows/publish.yml"
  repository_dispatch:
    types: [create-release]
    client_payload:
      version:
        required: true
  workflow_dispatch:


jobs:
  create_release:
    #if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.create_release.outputs.release_tag }}
    steps:
      - name: checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: Create release
        id: create_release
        uses: ./.github/actions/create-release

  build:
    if: ${{ always() }}
    needs: create_release
    strategy:
      matrix:
        include:
          - machine: windows-latest
            platform: win
            file_name: D2L.Bmx.exe
          - machine: macos-latest
            platform: osx
            file_name: D2L.Bmx
    runs-on: ${{ matrix.machine }}
    timeout-minutes: 10
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - name: checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: publish
        shell: pwsh
        working-directory: src/D2L.Bmx
        run: |
          dotnet publish -r $env:PLATFORM-x64 -c Release -o build
          ls build
      - name: upload build
        #if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        env:
          RELEASE_TAG: ${{ needs.create_release.outputs.release_tag }}
          PLATFORM: ${{ matrix.platform }}
          FILE_NAME: ${{ matrix.file_name }}
          GH_TOKEN: ${{ github.token }}
        working-directory: src/D2L.Bmx
        run: |
          cd build
          mv "$FILE_NAME" "$PLATFORM-$FILE_NAME"
          gh release upload v3.0.0 "$PLATFORM-$FILE_NAME"

  build_docker:
    if: ${{ always() }}
    needs: create_release
    strategy:
      matrix:
        include:
          - file: Dockerfile.ubuntu
            platform: ubuntu
          - file: Dockerfile.alpine
            platform: alpine
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: checkout
        uses: Brightspace/third-party-actions@actions/checkout
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: publish
        shell: pwsh
        env:
          DOCKERFILE: ${{ matrix.file }}
        run: |
          docker buildx build -f $env:DOCKERFILE -o build .
      - name: upload build
        #if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        env:
          RELEASE_TAG: ${{ needs.create_release.outputs.release_tag }}
          PLATFORM: ${{ matrix.platform }}
          GH_TOKEN: ${{ github.token }}
        run: |
          ls
          cd build
          mv "D2L.Bmx" "$PLATFORM-D2L.Bmx"
          gh release upload v3.0.0 "$PLATFORM-D2L.Bmx"
